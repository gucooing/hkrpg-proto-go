// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: ChessRogueCell.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChessRogueCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JLOBGDKNJLN uint32   `protobuf:"varint,10,opt,name=JLOBGDKNJLN,proto3" json:"JLOBGDKNJLN,omitempty"` // 7, 4
	NNMNHHPJBDB uint32   `protobuf:"varint,2,opt,name=NNMNHHPJBDB,proto3" json:"NNMNHHPJBDB,omitempty"`
	IsUnlocked  bool     `protobuf:"varint,8,opt,name=is_unlocked,json=isUnlocked,proto3" json:"is_unlocked,omitempty"` // true
	PNKFAINKKCE uint32   `protobuf:"varint,7,opt,name=PNKFAINKKCE,proto3" json:"PNKFAINKKCE,omitempty"`                 // 5, 3
	FOKKJJADPEA uint32   `protobuf:"varint,5,opt,name=FOKKJJADPEA,proto3" json:"FOKKJJADPEA,omitempty"`
	NLBGDNLIONI uint32   `protobuf:"varint,3,opt,name=NLBGDNLIONI,proto3" json:"NLBGDNLIONI,omitempty"`
	IIJOCONHKND []uint32 `protobuf:"varint,4,rep,packed,name=IIJOCONHKND,proto3" json:"IIJOCONHKND,omitempty"`
	EntranceId  uint32   `protobuf:"varint,1,opt,name=entrance_id,json=entranceId,proto3" json:"entrance_id,omitempty"`
	NewRoomId   uint32   `protobuf:"varint,11,opt,name=new_room_id,json=newRoomId,proto3" json:"new_room_id,omitempty"`
	CellId      uint32   `protobuf:"varint,9,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
	// AKNBDONHPPM chess_rogue_info = 14;
	PMBLMGDFGAN bool `protobuf:"varint,6,opt,name=PMBLMGDFGAN,proto3" json:"PMBLMGDFGAN,omitempty"`
}

func (x *ChessRogueCell) Reset() {
	*x = ChessRogueCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ChessRogueCell_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChessRogueCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChessRogueCell) ProtoMessage() {}

func (x *ChessRogueCell) ProtoReflect() protoreflect.Message {
	mi := &file_ChessRogueCell_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChessRogueCell.ProtoReflect.Descriptor instead.
func (*ChessRogueCell) Descriptor() ([]byte, []int) {
	return file_ChessRogueCell_proto_rawDescGZIP(), []int{0}
}

func (x *ChessRogueCell) GetJLOBGDKNJLN() uint32 {
	if x != nil {
		return x.JLOBGDKNJLN
	}
	return 0
}

func (x *ChessRogueCell) GetNNMNHHPJBDB() uint32 {
	if x != nil {
		return x.NNMNHHPJBDB
	}
	return 0
}

func (x *ChessRogueCell) GetIsUnlocked() bool {
	if x != nil {
		return x.IsUnlocked
	}
	return false
}

func (x *ChessRogueCell) GetPNKFAINKKCE() uint32 {
	if x != nil {
		return x.PNKFAINKKCE
	}
	return 0
}

func (x *ChessRogueCell) GetFOKKJJADPEA() uint32 {
	if x != nil {
		return x.FOKKJJADPEA
	}
	return 0
}

func (x *ChessRogueCell) GetNLBGDNLIONI() uint32 {
	if x != nil {
		return x.NLBGDNLIONI
	}
	return 0
}

func (x *ChessRogueCell) GetIIJOCONHKND() []uint32 {
	if x != nil {
		return x.IIJOCONHKND
	}
	return nil
}

func (x *ChessRogueCell) GetEntranceId() uint32 {
	if x != nil {
		return x.EntranceId
	}
	return 0
}

func (x *ChessRogueCell) GetNewRoomId() uint32 {
	if x != nil {
		return x.NewRoomId
	}
	return 0
}

func (x *ChessRogueCell) GetCellId() uint32 {
	if x != nil {
		return x.CellId
	}
	return 0
}

func (x *ChessRogueCell) GetPMBLMGDFGAN() bool {
	if x != nil {
		return x.PMBLMGDFGAN
	}
	return false
}

var File_ChessRogueCell_proto protoreflect.FileDescriptor

var file_ChessRogueCell_proto_rawDesc = []byte{
	0x0a, 0x14, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x65, 0x6c, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x02, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x73, 0x73,
	0x52, 0x6f, 0x67, 0x75, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x4c, 0x4f,
	0x42, 0x47, 0x44, 0x4b, 0x4e, 0x4a, 0x4c, 0x4e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x4a, 0x4c, 0x4f, 0x42, 0x47, 0x44, 0x4b, 0x4e, 0x4a, 0x4c, 0x4e, 0x12, 0x20, 0x0a, 0x0b, 0x4e,
	0x4e, 0x4d, 0x4e, 0x48, 0x48, 0x50, 0x4a, 0x42, 0x44, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x4e, 0x4e, 0x4d, 0x4e, 0x48, 0x48, 0x50, 0x4a, 0x42, 0x44, 0x42, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x50, 0x4e, 0x4b, 0x46, 0x41, 0x49, 0x4e, 0x4b, 0x4b, 0x43, 0x45, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x50, 0x4e, 0x4b, 0x46, 0x41, 0x49, 0x4e, 0x4b, 0x4b, 0x43, 0x45,
	0x12, 0x20, 0x0a, 0x0b, 0x46, 0x4f, 0x4b, 0x4b, 0x4a, 0x4a, 0x41, 0x44, 0x50, 0x45, 0x41, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x46, 0x4f, 0x4b, 0x4b, 0x4a, 0x4a, 0x41, 0x44, 0x50,
	0x45, 0x41, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x4c, 0x42, 0x47, 0x44, 0x4e, 0x4c, 0x49, 0x4f, 0x4e,
	0x49, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4e, 0x4c, 0x42, 0x47, 0x44, 0x4e, 0x4c,
	0x49, 0x4f, 0x4e, 0x49, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x49, 0x4a, 0x4f, 0x43, 0x4f, 0x4e, 0x48,
	0x4b, 0x4e, 0x44, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x49, 0x49, 0x4a, 0x4f, 0x43,
	0x4f, 0x4e, 0x48, 0x4b, 0x4e, 0x44, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x65,
	0x77, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x50, 0x4d, 0x42, 0x4c, 0x4d, 0x47, 0x44, 0x46, 0x47, 0x41, 0x4e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x50, 0x4d, 0x42, 0x4c, 0x4d, 0x47, 0x44, 0x46, 0x47,
	0x41, 0x4e, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ChessRogueCell_proto_rawDescOnce sync.Once
	file_ChessRogueCell_proto_rawDescData = file_ChessRogueCell_proto_rawDesc
)

func file_ChessRogueCell_proto_rawDescGZIP() []byte {
	file_ChessRogueCell_proto_rawDescOnce.Do(func() {
		file_ChessRogueCell_proto_rawDescData = protoimpl.X.CompressGZIP(file_ChessRogueCell_proto_rawDescData)
	})
	return file_ChessRogueCell_proto_rawDescData
}

var file_ChessRogueCell_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_ChessRogueCell_proto_goTypes = []interface{}{
	(*ChessRogueCell)(nil), // 0: ChessRogueCell
}
var file_ChessRogueCell_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ChessRogueCell_proto_init() }
func file_ChessRogueCell_proto_init() {
	if File_ChessRogueCell_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ChessRogueCell_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChessRogueCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ChessRogueCell_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ChessRogueCell_proto_goTypes,
		DependencyIndexes: file_ChessRogueCell_proto_depIdxs,
		MessageInfos:      file_ChessRogueCell_proto_msgTypes,
	}.Build()
	File_ChessRogueCell_proto = out.File
	file_ChessRogueCell_proto_rawDesc = nil
	file_ChessRogueCell_proto_goTypes = nil
	file_ChessRogueCell_proto_depIdxs = nil
}
