// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: EvolveBuildBattleInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EvolveBuildBattleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurLevelIdFieldNumber            uint32                       `protobuf:"varint,1,opt,name=CurLevelIdFieldNumber,proto3" json:"CurLevelIdFieldNumber,omitempty"`
	CurPeriodFieldNumber             uint32                       `protobuf:"varint,2,opt,name=CurPeriodFieldNumber,proto3" json:"CurPeriodFieldNumber,omitempty"`
	CurCoinFieldNumber               uint32                       `protobuf:"varint,3,opt,name=CurCoinFieldNumber,proto3" json:"CurCoinFieldNumber,omitempty"`
	WeaponSlotListFieldNumber        []*DLCKEGPHLOI               `protobuf:"bytes,4,rep,name=WeaponSlotListFieldNumber,proto3" json:"WeaponSlotListFieldNumber,omitempty"`
	AccessorySlotListFieldNumber     []*DLCKEGPHLOI               `protobuf:"bytes,5,rep,name=AccessorySlotListFieldNumber,proto3" json:"AccessorySlotListFieldNumber,omitempty"`
	BanGearListFieldNumber           []uint32                     `protobuf:"varint,6,rep,packed,name=BanGearListFieldNumber,proto3" json:"BanGearListFieldNumber,omitempty"`
	CollectionFieldNumber            *MLDIBDOFJFN                 `protobuf:"bytes,7,opt,name=CollectionFieldNumber,proto3" json:"CollectionFieldNumber,omitempty"`
	AllowedGearListFieldNumber       []uint32                     `protobuf:"varint,8,rep,packed,name=AllowedGearListFieldNumber,proto3" json:"AllowedGearListFieldNumber,omitempty"`
	CurExpFieldNumber                uint32                       `protobuf:"varint,9,opt,name=CurExpFieldNumber,proto3" json:"CurExpFieldNumber,omitempty"`
	CurRerollFieldNumber             uint32                       `protobuf:"varint,10,opt,name=CurRerollFieldNumber,proto3" json:"CurRerollFieldNumber,omitempty"`
	CurTreasureMissCntFieldNumber    uint32                       `protobuf:"varint,11,opt,name=CurTreasureMissCntFieldNumber,proto3" json:"CurTreasureMissCntFieldNumber,omitempty"`
	PeriodIdListFieldNumber          []uint32                     `protobuf:"varint,12,rep,packed,name=PeriodIdListFieldNumber,proto3" json:"PeriodIdListFieldNumber,omitempty"`
	CurGearLostCntFieldNumber        uint32                       `protobuf:"varint,13,opt,name=CurGearLostCntFieldNumber,proto3" json:"CurGearLostCntFieldNumber,omitempty"`
	CurWaveFieldNumber               uint32                       `protobuf:"varint,14,opt,name=CurWaveFieldNumber,proto3" json:"CurWaveFieldNumber,omitempty"`
	IsUnlockGearRerollFieldNumber    bool                         `protobuf:"varint,15,opt,name=IsUnlockGearRerollFieldNumber,proto3" json:"IsUnlockGearRerollFieldNumber,omitempty"`
	IsUnlockGearBanFieldNumber       bool                         `protobuf:"varint,16,opt,name=IsUnlockGearBanFieldNumber,proto3" json:"IsUnlockGearBanFieldNumber,omitempty"`
	CardListFieldNumber              []*BLABHFLIMIH               `protobuf:"bytes,17,rep,name=CardListFieldNumber,proto3" json:"CardListFieldNumber,omitempty"`
	GearDamageListFieldNumber        []*EvolveBuildGearDamageInfo `protobuf:"bytes,18,rep,name=GearDamageListFieldNumber,proto3" json:"GearDamageListFieldNumber,omitempty"`
	StatParamsFieldNumber            []uint32                     `protobuf:"varint,19,rep,packed,name=StatParamsFieldNumber,proto3" json:"StatParamsFieldNumber,omitempty"`
	IsGiveupFieldNumber              bool                         `protobuf:"varint,20,opt,name=IsGiveupFieldNumber,proto3" json:"IsGiveupFieldNumber,omitempty"`
	CurUnusedRoundCntFieldNumber     uint32                       `protobuf:"varint,21,opt,name=CurUnusedRoundCntFieldNumber,proto3" json:"CurUnusedRoundCntFieldNumber,omitempty"`
	StatLogInfoFieldNumber           *ECDIIKCMOJO                 `protobuf:"bytes,22,opt,name=StatLogInfoFieldNumber,proto3" json:"StatLogInfoFieldNumber,omitempty"`
	PeriodFirstRandomSeedFieldNumber uint32                       `protobuf:"varint,23,opt,name=PeriodFirstRandomSeedFieldNumber,proto3" json:"PeriodFirstRandomSeedFieldNumber,omitempty"`
}

func (x *EvolveBuildBattleInfo) Reset() {
	*x = EvolveBuildBattleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_EvolveBuildBattleInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvolveBuildBattleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvolveBuildBattleInfo) ProtoMessage() {}

func (x *EvolveBuildBattleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_EvolveBuildBattleInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvolveBuildBattleInfo.ProtoReflect.Descriptor instead.
func (*EvolveBuildBattleInfo) Descriptor() ([]byte, []int) {
	return file_EvolveBuildBattleInfo_proto_rawDescGZIP(), []int{0}
}

func (x *EvolveBuildBattleInfo) GetCurLevelIdFieldNumber() uint32 {
	if x != nil {
		return x.CurLevelIdFieldNumber
	}
	return 0
}

func (x *EvolveBuildBattleInfo) GetCurPeriodFieldNumber() uint32 {
	if x != nil {
		return x.CurPeriodFieldNumber
	}
	return 0
}

func (x *EvolveBuildBattleInfo) GetCurCoinFieldNumber() uint32 {
	if x != nil {
		return x.CurCoinFieldNumber
	}
	return 0
}

func (x *EvolveBuildBattleInfo) GetWeaponSlotListFieldNumber() []*DLCKEGPHLOI {
	if x != nil {
		return x.WeaponSlotListFieldNumber
	}
	return nil
}

func (x *EvolveBuildBattleInfo) GetAccessorySlotListFieldNumber() []*DLCKEGPHLOI {
	if x != nil {
		return x.AccessorySlotListFieldNumber
	}
	return nil
}

func (x *EvolveBuildBattleInfo) GetBanGearListFieldNumber() []uint32 {
	if x != nil {
		return x.BanGearListFieldNumber
	}
	return nil
}

func (x *EvolveBuildBattleInfo) GetCollectionFieldNumber() *MLDIBDOFJFN {
	if x != nil {
		return x.CollectionFieldNumber
	}
	return nil
}

func (x *EvolveBuildBattleInfo) GetAllowedGearListFieldNumber() []uint32 {
	if x != nil {
		return x.AllowedGearListFieldNumber
	}
	return nil
}

func (x *EvolveBuildBattleInfo) GetCurExpFieldNumber() uint32 {
	if x != nil {
		return x.CurExpFieldNumber
	}
	return 0
}

func (x *EvolveBuildBattleInfo) GetCurRerollFieldNumber() uint32 {
	if x != nil {
		return x.CurRerollFieldNumber
	}
	return 0
}

func (x *EvolveBuildBattleInfo) GetCurTreasureMissCntFieldNumber() uint32 {
	if x != nil {
		return x.CurTreasureMissCntFieldNumber
	}
	return 0
}

func (x *EvolveBuildBattleInfo) GetPeriodIdListFieldNumber() []uint32 {
	if x != nil {
		return x.PeriodIdListFieldNumber
	}
	return nil
}

func (x *EvolveBuildBattleInfo) GetCurGearLostCntFieldNumber() uint32 {
	if x != nil {
		return x.CurGearLostCntFieldNumber
	}
	return 0
}

func (x *EvolveBuildBattleInfo) GetCurWaveFieldNumber() uint32 {
	if x != nil {
		return x.CurWaveFieldNumber
	}
	return 0
}

func (x *EvolveBuildBattleInfo) GetIsUnlockGearRerollFieldNumber() bool {
	if x != nil {
		return x.IsUnlockGearRerollFieldNumber
	}
	return false
}

func (x *EvolveBuildBattleInfo) GetIsUnlockGearBanFieldNumber() bool {
	if x != nil {
		return x.IsUnlockGearBanFieldNumber
	}
	return false
}

func (x *EvolveBuildBattleInfo) GetCardListFieldNumber() []*BLABHFLIMIH {
	if x != nil {
		return x.CardListFieldNumber
	}
	return nil
}

func (x *EvolveBuildBattleInfo) GetGearDamageListFieldNumber() []*EvolveBuildGearDamageInfo {
	if x != nil {
		return x.GearDamageListFieldNumber
	}
	return nil
}

func (x *EvolveBuildBattleInfo) GetStatParamsFieldNumber() []uint32 {
	if x != nil {
		return x.StatParamsFieldNumber
	}
	return nil
}

func (x *EvolveBuildBattleInfo) GetIsGiveupFieldNumber() bool {
	if x != nil {
		return x.IsGiveupFieldNumber
	}
	return false
}

func (x *EvolveBuildBattleInfo) GetCurUnusedRoundCntFieldNumber() uint32 {
	if x != nil {
		return x.CurUnusedRoundCntFieldNumber
	}
	return 0
}

func (x *EvolveBuildBattleInfo) GetStatLogInfoFieldNumber() *ECDIIKCMOJO {
	if x != nil {
		return x.StatLogInfoFieldNumber
	}
	return nil
}

func (x *EvolveBuildBattleInfo) GetPeriodFirstRandomSeedFieldNumber() uint32 {
	if x != nil {
		return x.PeriodFirstRandomSeedFieldNumber
	}
	return 0
}

var File_EvolveBuildBattleInfo_proto protoreflect.FileDescriptor

var file_EvolveBuildBattleInfo_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x45,
	0x43, 0x44, 0x49, 0x49, 0x4b, 0x43, 0x4d, 0x4f, 0x4a, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x42, 0x4c, 0x41, 0x42, 0x48, 0x46, 0x4c, 0x49, 0x4d, 0x49, 0x48, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x44, 0x4c, 0x43, 0x4b, 0x45, 0x47, 0x50, 0x48, 0x4c, 0x4f, 0x49,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x47, 0x65, 0x61, 0x72, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4d, 0x4c, 0x44, 0x49, 0x42, 0x44, 0x4f,
	0x46, 0x4a, 0x46, 0x4e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x0b, 0x0a, 0x15, 0x45,
	0x76, 0x6f, 0x6c, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x15, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x15, 0x43, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x43, 0x75,
	0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x43, 0x75, 0x72, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e,
	0x0a, 0x12, 0x43, 0x75, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x43, 0x75, 0x72, 0x43,
	0x6f, 0x69, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4a,
	0x0a, 0x19, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x44, 0x4c, 0x43, 0x4b, 0x45, 0x47, 0x50, 0x48, 0x4c, 0x4f, 0x49, 0x52,
	0x19, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x1c, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x44, 0x4c, 0x43, 0x4b, 0x45, 0x47, 0x50, 0x48, 0x4c, 0x4f, 0x49, 0x52, 0x1c,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16,
	0x42, 0x61, 0x6e, 0x47, 0x65, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x16, 0x42, 0x61,
	0x6e, 0x47, 0x65, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x15, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x4c, 0x44, 0x49, 0x42, 0x44, 0x4f, 0x46, 0x4a, 0x46,
	0x4e, 0x52, 0x15, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x1a, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x47, 0x65, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1a, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x47, 0x65, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x75, 0x72, 0x45,
	0x78, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x43, 0x75, 0x72, 0x45, 0x78, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x43, 0x75, 0x72, 0x52, 0x65, 0x72,
	0x6f, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x43, 0x75, 0x72, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x1d, 0x43, 0x75,
	0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x43, 0x6e, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x1d, 0x43, 0x75, 0x72, 0x54, 0x72, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4d, 0x69,
	0x73, 0x73, 0x43, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x38, 0x0a, 0x17, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x17, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x19, 0x43, 0x75,
	0x72, 0x47, 0x65, 0x61, 0x72, 0x4c, 0x6f, 0x73, 0x74, 0x43, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x43,
	0x75, 0x72, 0x47, 0x65, 0x61, 0x72, 0x4c, 0x6f, 0x73, 0x74, 0x43, 0x6e, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x75, 0x72, 0x57,
	0x61, 0x76, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x43, 0x75, 0x72, 0x57, 0x61, 0x76, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x1d, 0x49, 0x73, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x61, 0x72, 0x52, 0x65, 0x72, 0x6f, 0x6c, 0x6c, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1d, 0x49, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x61, 0x72, 0x52, 0x65, 0x72,
	0x6f, 0x6c, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3e,
	0x0a, 0x1a, 0x49, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x61, 0x72, 0x42, 0x61,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1a, 0x49, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x65, 0x61, 0x72,
	0x42, 0x61, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3e,
	0x0a, 0x13, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x4c,
	0x41, 0x42, 0x48, 0x46, 0x4c, 0x49, 0x4d, 0x49, 0x48, 0x52, 0x13, 0x43, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x58,
	0x0a, 0x19, 0x47, 0x65, 0x61, 0x72, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x12, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x45, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x47,
	0x65, 0x61, 0x72, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x19, 0x47,
	0x65, 0x61, 0x72, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x15, 0x53, 0x74, 0x61, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x13, 0x49, 0x73, 0x47, 0x69, 0x76, 0x65, 0x75, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x49, 0x73, 0x47,
	0x69, 0x76, 0x65, 0x75, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x42, 0x0a, 0x1c, 0x43, 0x75, 0x72, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x43, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x43, 0x75, 0x72, 0x55, 0x6e, 0x75, 0x73, 0x65,
	0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x43, 0x44, 0x49, 0x49, 0x4b, 0x43, 0x4d, 0x4f,
	0x4a, 0x4f, 0x52, 0x16, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x20, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53,
	0x65, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x20, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x28, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e,
	0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_EvolveBuildBattleInfo_proto_rawDescOnce sync.Once
	file_EvolveBuildBattleInfo_proto_rawDescData = file_EvolveBuildBattleInfo_proto_rawDesc
)

func file_EvolveBuildBattleInfo_proto_rawDescGZIP() []byte {
	file_EvolveBuildBattleInfo_proto_rawDescOnce.Do(func() {
		file_EvolveBuildBattleInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_EvolveBuildBattleInfo_proto_rawDescData)
	})
	return file_EvolveBuildBattleInfo_proto_rawDescData
}

var file_EvolveBuildBattleInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_EvolveBuildBattleInfo_proto_goTypes = []interface{}{
	(*EvolveBuildBattleInfo)(nil),     // 0: EvolveBuildBattleInfo
	(*DLCKEGPHLOI)(nil),               // 1: DLCKEGPHLOI
	(*MLDIBDOFJFN)(nil),               // 2: MLDIBDOFJFN
	(*BLABHFLIMIH)(nil),               // 3: BLABHFLIMIH
	(*EvolveBuildGearDamageInfo)(nil), // 4: EvolveBuildGearDamageInfo
	(*ECDIIKCMOJO)(nil),               // 5: ECDIIKCMOJO
}
var file_EvolveBuildBattleInfo_proto_depIdxs = []int32{
	1, // 0: EvolveBuildBattleInfo.WeaponSlotListFieldNumber:type_name -> DLCKEGPHLOI
	1, // 1: EvolveBuildBattleInfo.AccessorySlotListFieldNumber:type_name -> DLCKEGPHLOI
	2, // 2: EvolveBuildBattleInfo.CollectionFieldNumber:type_name -> MLDIBDOFJFN
	3, // 3: EvolveBuildBattleInfo.CardListFieldNumber:type_name -> BLABHFLIMIH
	4, // 4: EvolveBuildBattleInfo.GearDamageListFieldNumber:type_name -> EvolveBuildGearDamageInfo
	5, // 5: EvolveBuildBattleInfo.StatLogInfoFieldNumber:type_name -> ECDIIKCMOJO
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_EvolveBuildBattleInfo_proto_init() }
func file_EvolveBuildBattleInfo_proto_init() {
	if File_EvolveBuildBattleInfo_proto != nil {
		return
	}
	file_ECDIIKCMOJO_proto_init()
	file_BLABHFLIMIH_proto_init()
	file_DLCKEGPHLOI_proto_init()
	file_EvolveBuildGearDamageInfo_proto_init()
	file_MLDIBDOFJFN_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_EvolveBuildBattleInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvolveBuildBattleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_EvolveBuildBattleInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_EvolveBuildBattleInfo_proto_goTypes,
		DependencyIndexes: file_EvolveBuildBattleInfo_proto_depIdxs,
		MessageInfos:      file_EvolveBuildBattleInfo_proto_msgTypes,
	}.Build()
	File_EvolveBuildBattleInfo_proto = out.File
	file_EvolveBuildBattleInfo_proto_rawDesc = nil
	file_EvolveBuildBattleInfo_proto_goTypes = nil
	file_EvolveBuildBattleInfo_proto_depIdxs = nil
}
