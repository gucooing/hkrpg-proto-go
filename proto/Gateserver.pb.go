// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: GateServer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GateServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BBFEFNDJDFE     string   `protobuf:"bytes,890,opt,name=BBFEFNDJDFE,proto3" json:"BBFEFNDJDFE,omitempty"`
	B3              bool     `protobuf:"varint,1020,opt,name=b3,proto3" json:"b3,omitempty"`
	ADPKMEMHALK     bool     `protobuf:"varint,1925,opt,name=ADPKMEMHALK,proto3" json:"ADPKMEMHALK,omitempty"`
	LNDGOINLKHO     bool     `protobuf:"varint,407,opt,name=LNDGOINLKHO,proto3" json:"LNDGOINLKHO,omitempty"`
	Port            uint32   `protobuf:"varint,11,opt,name=port,proto3" json:"port,omitempty"`
	OEOGPIFCILD     bool     `protobuf:"varint,1181,opt,name=OEOGPIFCILD,proto3" json:"OEOGPIFCILD,omitempty"`
	OJPIJMNNKCM     string   `protobuf:"bytes,1917,opt,name=OJPIJMNNKCM,proto3" json:"OJPIJMNNKCM,omitempty"`
	DJHBMFABBOJ     string   `protobuf:"bytes,812,opt,name=DJHBMFABBOJ,proto3" json:"DJHBMFABBOJ,omitempty"`
	HHCHLHDOCPB     string   `protobuf:"bytes,1064,opt,name=HHCHLHDOCPB,proto3" json:"HHCHLHDOCPB,omitempty"`
	Msg             string   `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	B2              bool     `protobuf:"varint,12,opt,name=b2,proto3" json:"b2,omitempty"`
	LMAILBHAHEA     string   `protobuf:"bytes,15,opt,name=LMAILBHAHEA,proto3" json:"LMAILBHAHEA,omitempty"`
	MKCAIJKHBGM     string   `protobuf:"bytes,1104,opt,name=MKCAIJKHBGM,proto3" json:"MKCAIJKHBGM,omitempty"`
	BIBNFEKPHJA     string   `protobuf:"bytes,780,opt,name=BIBNFEKPHJA,proto3" json:"BIBNFEKPHJA,omitempty"`
	B4              bool     `protobuf:"varint,1353,opt,name=b4,proto3" json:"b4,omitempty"`
	LMDLKLEIFNF     string   `protobuf:"bytes,2016,opt,name=LMDLKLEIFNF,proto3" json:"LMDLKLEIFNF,omitempty"`
	ExResourceUrl   string   `protobuf:"bytes,5,opt,name=ex_resource_url,json=exResourceUrl,proto3" json:"ex_resource_url,omitempty"`
	B5              bool     `protobuf:"varint,1433,opt,name=b5,proto3" json:"b5,omitempty"`
	CAFLEDPEPEN     string   `protobuf:"bytes,1630,opt,name=CAFLEDPEPEN,proto3" json:"CAFLEDPEPEN,omitempty"`
	FABBHECPBBJ     int64    `protobuf:"varint,14,opt,name=FABBHECPBBJ,proto3" json:"FABBHECPBBJ,omitempty"`
	EMDHFACGJKN     string   `protobuf:"bytes,1205,opt,name=EMDHFACGJKN,proto3" json:"EMDHFACGJKN,omitempty"`
	EBNCGHKMEEM     string   `protobuf:"bytes,1316,opt,name=EBNCGHKMEEM,proto3" json:"EBNCGHKMEEM,omitempty"`
	IPNOAKAGOCD     []string `protobuf:"bytes,1054,rep,name=IPNOAKAGOCD,proto3" json:"IPNOAKAGOCD,omitempty"`
	UseTcp          bool     `protobuf:"varint,1887,opt,name=use_tcp,json=useTcp,proto3" json:"use_tcp,omitempty"`
	AssetBundleUrl  string   `protobuf:"bytes,7,opt,name=asset_bundle_url,json=assetBundleUrl,proto3" json:"asset_bundle_url,omitempty"`
	B7              bool     `protobuf:"varint,1826,opt,name=b7,proto3" json:"b7,omitempty"`
	HIBFAOKGPGM     string   `protobuf:"bytes,623,opt,name=HIBFAOKGPGM,proto3" json:"HIBFAOKGPGM,omitempty"`
	HBJDLGHCIPN     string   `protobuf:"bytes,1420,opt,name=HBJDLGHCIPN,proto3" json:"HBJDLGHCIPN,omitempty"`
	IfixVersion     string   `protobuf:"bytes,570,opt,name=ifix_version,json=ifixVersion,proto3" json:"ifix_version,omitempty"`
	OBENMIPINGL     bool     `protobuf:"varint,837,opt,name=OBENMIPINGL,proto3" json:"OBENMIPINGL,omitempty"`
	KKOKNFHLKGM     int64    `protobuf:"varint,13,opt,name=KKOKNFHLKGM,proto3" json:"KKOKNFHLKGM,omitempty"`
	MHPJHLGNANF     uint32   `protobuf:"varint,4,opt,name=MHPJHLGNANF,proto3" json:"MHPJHLGNANF,omitempty"`
	IfixUrl         string   `protobuf:"bytes,1680,opt,name=ifix_url,json=ifixUrl,proto3" json:"ifix_url,omitempty"`
	HGCAGDBPFAF     bool     `protobuf:"varint,504,opt,name=HGCAGDBPFAF,proto3" json:"HGCAGDBPFAF,omitempty"`
	JCJMJDKALAJ     string   `protobuf:"bytes,1300,opt,name=JCJMJDKALAJ,proto3" json:"JCJMJDKALAJ,omitempty"`
	KPFCAFJPHMF     string   `protobuf:"bytes,1979,opt,name=KPFCAFJPHMF,proto3" json:"KPFCAFJPHMF,omitempty"`
	BDGLNBOBMIE     bool     `protobuf:"varint,1402,opt,name=BDGLNBOBMIE,proto3" json:"BDGLNBOBMIE,omitempty"`
	IKNBJOFLCAE     string   `protobuf:"bytes,1923,opt,name=IKNBJOFLCAE,proto3" json:"IKNBJOFLCAE,omitempty"`
	LuaUrl          string   `protobuf:"bytes,3,opt,name=lua_url,json=luaUrl,proto3" json:"lua_url,omitempty"`
	NDBOFCMHLNP     string   `protobuf:"bytes,950,opt,name=NDBOFCMHLNP,proto3" json:"NDBOFCMHLNP,omitempty"`
	MdkResVersion   string   `protobuf:"bytes,707,opt,name=mdk_res_version,json=mdkResVersion,proto3" json:"mdk_res_version,omitempty"`
	LCNMCLAFHPB     string   `protobuf:"bytes,459,opt,name=LCNMCLAFHPB,proto3" json:"LCNMCLAFHPB,omitempty"`
	Ip              string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	OMPMGOEFBMC     string   `protobuf:"bytes,1443,opt,name=OMPMGOEFBMC,proto3" json:"OMPMGOEFBMC,omitempty"`
	JMJFDBEHDKG     string   `protobuf:"bytes,581,opt,name=JMJFDBEHDKG,proto3" json:"JMJFDBEHDKG,omitempty"`
	MOGCGBGHAIO     uint32   `protobuf:"varint,1,opt,name=MOGCGBGHAIO,proto3" json:"MOGCGBGHAIO,omitempty"`
	RegionName      string   `protobuf:"bytes,10,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	IDPGAEJDPPD     string   `protobuf:"bytes,1686,opt,name=IDPGAEJDPPD,proto3" json:"IDPGAEJDPPD,omitempty"`
	GMAEPOPPCEH     string   `protobuf:"bytes,434,opt,name=GMAEPOPPCEH,proto3" json:"GMAEPOPPCEH,omitempty"`
	B1              bool     `protobuf:"varint,9,opt,name=b1,proto3" json:"b1,omitempty"`
	B6              bool     `protobuf:"varint,1739,opt,name=b6,proto3" json:"b6,omitempty"`
	Retcode         uint32   `protobuf:"varint,8,opt,name=retcode,proto3" json:"retcode,omitempty"`
	HNGHBANBMHF     string   `protobuf:"bytes,715,opt,name=HNGHBANBMHF,proto3" json:"HNGHBANBMHF,omitempty"`
	AIODAJFAGPA     string   `protobuf:"bytes,142,opt,name=AIODAJFAGPA,proto3" json:"AIODAJFAGPA,omitempty"`
	ClientSecretKey string   `protobuf:"bytes,870,opt,name=client_secret_key,json=clientSecretKey,proto3" json:"client_secret_key,omitempty"`
	KJAMICBMDJD     string   `protobuf:"bytes,88,opt,name=KJAMICBMDJD,proto3" json:"KJAMICBMDJD,omitempty"`
}

func (x *GateServer) Reset() {
	*x = GateServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GateServer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GateServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GateServer) ProtoMessage() {}

func (x *GateServer) ProtoReflect() protoreflect.Message {
	mi := &file_GateServer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GateServer.ProtoReflect.Descriptor instead.
func (*GateServer) Descriptor() ([]byte, []int) {
	return file_GateServer_proto_rawDescGZIP(), []int{0}
}

func (x *GateServer) GetBBFEFNDJDFE() string {
	if x != nil {
		return x.BBFEFNDJDFE
	}
	return ""
}

func (x *GateServer) GetB3() bool {
	if x != nil {
		return x.B3
	}
	return false
}

func (x *GateServer) GetADPKMEMHALK() bool {
	if x != nil {
		return x.ADPKMEMHALK
	}
	return false
}

func (x *GateServer) GetLNDGOINLKHO() bool {
	if x != nil {
		return x.LNDGOINLKHO
	}
	return false
}

func (x *GateServer) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GateServer) GetOEOGPIFCILD() bool {
	if x != nil {
		return x.OEOGPIFCILD
	}
	return false
}

func (x *GateServer) GetOJPIJMNNKCM() string {
	if x != nil {
		return x.OJPIJMNNKCM
	}
	return ""
}

func (x *GateServer) GetDJHBMFABBOJ() string {
	if x != nil {
		return x.DJHBMFABBOJ
	}
	return ""
}

func (x *GateServer) GetHHCHLHDOCPB() string {
	if x != nil {
		return x.HHCHLHDOCPB
	}
	return ""
}

func (x *GateServer) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GateServer) GetB2() bool {
	if x != nil {
		return x.B2
	}
	return false
}

func (x *GateServer) GetLMAILBHAHEA() string {
	if x != nil {
		return x.LMAILBHAHEA
	}
	return ""
}

func (x *GateServer) GetMKCAIJKHBGM() string {
	if x != nil {
		return x.MKCAIJKHBGM
	}
	return ""
}

func (x *GateServer) GetBIBNFEKPHJA() string {
	if x != nil {
		return x.BIBNFEKPHJA
	}
	return ""
}

func (x *GateServer) GetB4() bool {
	if x != nil {
		return x.B4
	}
	return false
}

func (x *GateServer) GetLMDLKLEIFNF() string {
	if x != nil {
		return x.LMDLKLEIFNF
	}
	return ""
}

func (x *GateServer) GetExResourceUrl() string {
	if x != nil {
		return x.ExResourceUrl
	}
	return ""
}

func (x *GateServer) GetB5() bool {
	if x != nil {
		return x.B5
	}
	return false
}

func (x *GateServer) GetCAFLEDPEPEN() string {
	if x != nil {
		return x.CAFLEDPEPEN
	}
	return ""
}

func (x *GateServer) GetFABBHECPBBJ() int64 {
	if x != nil {
		return x.FABBHECPBBJ
	}
	return 0
}

func (x *GateServer) GetEMDHFACGJKN() string {
	if x != nil {
		return x.EMDHFACGJKN
	}
	return ""
}

func (x *GateServer) GetEBNCGHKMEEM() string {
	if x != nil {
		return x.EBNCGHKMEEM
	}
	return ""
}

func (x *GateServer) GetIPNOAKAGOCD() []string {
	if x != nil {
		return x.IPNOAKAGOCD
	}
	return nil
}

func (x *GateServer) GetUseTcp() bool {
	if x != nil {
		return x.UseTcp
	}
	return false
}

func (x *GateServer) GetAssetBundleUrl() string {
	if x != nil {
		return x.AssetBundleUrl
	}
	return ""
}

func (x *GateServer) GetB7() bool {
	if x != nil {
		return x.B7
	}
	return false
}

func (x *GateServer) GetHIBFAOKGPGM() string {
	if x != nil {
		return x.HIBFAOKGPGM
	}
	return ""
}

func (x *GateServer) GetHBJDLGHCIPN() string {
	if x != nil {
		return x.HBJDLGHCIPN
	}
	return ""
}

func (x *GateServer) GetIfixVersion() string {
	if x != nil {
		return x.IfixVersion
	}
	return ""
}

func (x *GateServer) GetOBENMIPINGL() bool {
	if x != nil {
		return x.OBENMIPINGL
	}
	return false
}

func (x *GateServer) GetKKOKNFHLKGM() int64 {
	if x != nil {
		return x.KKOKNFHLKGM
	}
	return 0
}

func (x *GateServer) GetMHPJHLGNANF() uint32 {
	if x != nil {
		return x.MHPJHLGNANF
	}
	return 0
}

func (x *GateServer) GetIfixUrl() string {
	if x != nil {
		return x.IfixUrl
	}
	return ""
}

func (x *GateServer) GetHGCAGDBPFAF() bool {
	if x != nil {
		return x.HGCAGDBPFAF
	}
	return false
}

func (x *GateServer) GetJCJMJDKALAJ() string {
	if x != nil {
		return x.JCJMJDKALAJ
	}
	return ""
}

func (x *GateServer) GetKPFCAFJPHMF() string {
	if x != nil {
		return x.KPFCAFJPHMF
	}
	return ""
}

func (x *GateServer) GetBDGLNBOBMIE() bool {
	if x != nil {
		return x.BDGLNBOBMIE
	}
	return false
}

func (x *GateServer) GetIKNBJOFLCAE() string {
	if x != nil {
		return x.IKNBJOFLCAE
	}
	return ""
}

func (x *GateServer) GetLuaUrl() string {
	if x != nil {
		return x.LuaUrl
	}
	return ""
}

func (x *GateServer) GetNDBOFCMHLNP() string {
	if x != nil {
		return x.NDBOFCMHLNP
	}
	return ""
}

func (x *GateServer) GetMdkResVersion() string {
	if x != nil {
		return x.MdkResVersion
	}
	return ""
}

func (x *GateServer) GetLCNMCLAFHPB() string {
	if x != nil {
		return x.LCNMCLAFHPB
	}
	return ""
}

func (x *GateServer) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GateServer) GetOMPMGOEFBMC() string {
	if x != nil {
		return x.OMPMGOEFBMC
	}
	return ""
}

func (x *GateServer) GetJMJFDBEHDKG() string {
	if x != nil {
		return x.JMJFDBEHDKG
	}
	return ""
}

func (x *GateServer) GetMOGCGBGHAIO() uint32 {
	if x != nil {
		return x.MOGCGBGHAIO
	}
	return 0
}

func (x *GateServer) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *GateServer) GetIDPGAEJDPPD() string {
	if x != nil {
		return x.IDPGAEJDPPD
	}
	return ""
}

func (x *GateServer) GetGMAEPOPPCEH() string {
	if x != nil {
		return x.GMAEPOPPCEH
	}
	return ""
}

func (x *GateServer) GetB1() bool {
	if x != nil {
		return x.B1
	}
	return false
}

func (x *GateServer) GetB6() bool {
	if x != nil {
		return x.B6
	}
	return false
}

func (x *GateServer) GetRetcode() uint32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GateServer) GetHNGHBANBMHF() string {
	if x != nil {
		return x.HNGHBANBMHF
	}
	return ""
}

func (x *GateServer) GetAIODAJFAGPA() string {
	if x != nil {
		return x.AIODAJFAGPA
	}
	return ""
}

func (x *GateServer) GetClientSecretKey() string {
	if x != nil {
		return x.ClientSecretKey
	}
	return ""
}

func (x *GateServer) GetKJAMICBMDJD() string {
	if x != nil {
		return x.KJAMICBMDJD
	}
	return ""
}

var File_GateServer_proto protoreflect.FileDescriptor

var file_GateServer_proto_rawDesc = []byte{
	0x0a, 0x10, 0x47, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf3, 0x0d, 0x0a, 0x0a, 0x47, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0b, 0x42, 0x42, 0x46, 0x45, 0x46, 0x4e, 0x44, 0x4a, 0x44, 0x46, 0x45,
	0x18, 0xfa, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x42, 0x46, 0x45, 0x46, 0x4e, 0x44,
	0x4a, 0x44, 0x46, 0x45, 0x12, 0x0f, 0x0a, 0x02, 0x62, 0x33, 0x18, 0xfc, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x62, 0x33, 0x12, 0x21, 0x0a, 0x0b, 0x41, 0x44, 0x50, 0x4b, 0x4d, 0x45, 0x4d,
	0x48, 0x41, 0x4c, 0x4b, 0x18, 0x85, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x41, 0x44, 0x50,
	0x4b, 0x4d, 0x45, 0x4d, 0x48, 0x41, 0x4c, 0x4b, 0x12, 0x21, 0x0a, 0x0b, 0x4c, 0x4e, 0x44, 0x47,
	0x4f, 0x49, 0x4e, 0x4c, 0x4b, 0x48, 0x4f, 0x18, 0x97, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x4c, 0x4e, 0x44, 0x47, 0x4f, 0x49, 0x4e, 0x4c, 0x4b, 0x48, 0x4f, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x21, 0x0a, 0x0b, 0x4f, 0x45, 0x4f, 0x47, 0x50, 0x49, 0x46, 0x43, 0x49, 0x4c, 0x44, 0x18, 0x9d,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4f, 0x45, 0x4f, 0x47, 0x50, 0x49, 0x46, 0x43, 0x49,
	0x4c, 0x44, 0x12, 0x21, 0x0a, 0x0b, 0x4f, 0x4a, 0x50, 0x49, 0x4a, 0x4d, 0x4e, 0x4e, 0x4b, 0x43,
	0x4d, 0x18, 0xfd, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x4a, 0x50, 0x49, 0x4a, 0x4d,
	0x4e, 0x4e, 0x4b, 0x43, 0x4d, 0x12, 0x21, 0x0a, 0x0b, 0x44, 0x4a, 0x48, 0x42, 0x4d, 0x46, 0x41,
	0x42, 0x42, 0x4f, 0x4a, 0x18, 0xac, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x4a, 0x48,
	0x42, 0x4d, 0x46, 0x41, 0x42, 0x42, 0x4f, 0x4a, 0x12, 0x21, 0x0a, 0x0b, 0x48, 0x48, 0x43, 0x48,
	0x4c, 0x48, 0x44, 0x4f, 0x43, 0x50, 0x42, 0x18, 0xa8, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x48, 0x48, 0x43, 0x48, 0x4c, 0x48, 0x44, 0x4f, 0x43, 0x50, 0x42, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x62, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x62, 0x32, 0x12, 0x20, 0x0a,
	0x0b, 0x4c, 0x4d, 0x41, 0x49, 0x4c, 0x42, 0x48, 0x41, 0x48, 0x45, 0x41, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4c, 0x4d, 0x41, 0x49, 0x4c, 0x42, 0x48, 0x41, 0x48, 0x45, 0x41, 0x12,
	0x21, 0x0a, 0x0b, 0x4d, 0x4b, 0x43, 0x41, 0x49, 0x4a, 0x4b, 0x48, 0x42, 0x47, 0x4d, 0x18, 0xd0,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x4b, 0x43, 0x41, 0x49, 0x4a, 0x4b, 0x48, 0x42,
	0x47, 0x4d, 0x12, 0x21, 0x0a, 0x0b, 0x42, 0x49, 0x42, 0x4e, 0x46, 0x45, 0x4b, 0x50, 0x48, 0x4a,
	0x41, 0x18, 0x8c, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x49, 0x42, 0x4e, 0x46, 0x45,
	0x4b, 0x50, 0x48, 0x4a, 0x41, 0x12, 0x0f, 0x0a, 0x02, 0x62, 0x34, 0x18, 0xc9, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x62, 0x34, 0x12, 0x21, 0x0a, 0x0b, 0x4c, 0x4d, 0x44, 0x4c, 0x4b, 0x4c,
	0x45, 0x49, 0x46, 0x4e, 0x46, 0x18, 0xe0, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x4d,
	0x44, 0x4c, 0x4b, 0x4c, 0x45, 0x49, 0x46, 0x4e, 0x46, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x0f, 0x0a, 0x02, 0x62, 0x35, 0x18, 0x99, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x62, 0x35, 0x12, 0x21, 0x0a, 0x0b, 0x43, 0x41, 0x46, 0x4c, 0x45, 0x44, 0x50, 0x45, 0x50, 0x45,
	0x4e, 0x18, 0xde, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x41, 0x46, 0x4c, 0x45, 0x44,
	0x50, 0x45, 0x50, 0x45, 0x4e, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x41, 0x42, 0x42, 0x48, 0x45, 0x43,
	0x50, 0x42, 0x42, 0x4a, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x46, 0x41, 0x42, 0x42,
	0x48, 0x45, 0x43, 0x50, 0x42, 0x42, 0x4a, 0x12, 0x21, 0x0a, 0x0b, 0x45, 0x4d, 0x44, 0x48, 0x46,
	0x41, 0x43, 0x47, 0x4a, 0x4b, 0x4e, 0x18, 0xb5, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45,
	0x4d, 0x44, 0x48, 0x46, 0x41, 0x43, 0x47, 0x4a, 0x4b, 0x4e, 0x12, 0x21, 0x0a, 0x0b, 0x45, 0x42,
	0x4e, 0x43, 0x47, 0x48, 0x4b, 0x4d, 0x45, 0x45, 0x4d, 0x18, 0xa4, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x45, 0x42, 0x4e, 0x43, 0x47, 0x48, 0x4b, 0x4d, 0x45, 0x45, 0x4d, 0x12, 0x21, 0x0a,
	0x0b, 0x49, 0x50, 0x4e, 0x4f, 0x41, 0x4b, 0x41, 0x47, 0x4f, 0x43, 0x44, 0x18, 0x9e, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x50, 0x4e, 0x4f, 0x41, 0x4b, 0x41, 0x47, 0x4f, 0x43, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x63, 0x70, 0x18, 0xdf, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x54, 0x63, 0x70, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x0f, 0x0a, 0x02, 0x62, 0x37, 0x18, 0xa2, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x62, 0x37, 0x12, 0x21, 0x0a, 0x0b, 0x48, 0x49, 0x42, 0x46, 0x41, 0x4f, 0x4b,
	0x47, 0x50, 0x47, 0x4d, 0x18, 0xef, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x48, 0x49, 0x42,
	0x46, 0x41, 0x4f, 0x4b, 0x47, 0x50, 0x47, 0x4d, 0x12, 0x21, 0x0a, 0x0b, 0x48, 0x42, 0x4a, 0x44,
	0x4c, 0x47, 0x48, 0x43, 0x49, 0x50, 0x4e, 0x18, 0x8c, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x48, 0x42, 0x4a, 0x44, 0x4c, 0x47, 0x48, 0x43, 0x49, 0x50, 0x4e, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x66, 0x69, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xba, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x66, 0x69, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0b, 0x4f, 0x42, 0x45, 0x4e, 0x4d, 0x49, 0x50, 0x49, 0x4e, 0x47, 0x4c, 0x18, 0xc5,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x4f, 0x42, 0x45, 0x4e, 0x4d, 0x49, 0x50, 0x49, 0x4e,
	0x47, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x4b, 0x4b, 0x4f, 0x4b, 0x4e, 0x46, 0x48, 0x4c, 0x4b, 0x47,
	0x4d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4b, 0x4b, 0x4f, 0x4b, 0x4e, 0x46, 0x48,
	0x4c, 0x4b, 0x47, 0x4d, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x48, 0x50, 0x4a, 0x48, 0x4c, 0x47, 0x4e,
	0x41, 0x4e, 0x46, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4d, 0x48, 0x50, 0x4a, 0x48,
	0x4c, 0x47, 0x4e, 0x41, 0x4e, 0x46, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x66, 0x69, 0x78, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x90, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x66, 0x69, 0x78, 0x55,
	0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0b, 0x48, 0x47, 0x43, 0x41, 0x47, 0x44, 0x42, 0x50, 0x46, 0x41,
	0x46, 0x18, 0xf8, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x48, 0x47, 0x43, 0x41, 0x47, 0x44,
	0x42, 0x50, 0x46, 0x41, 0x46, 0x12, 0x21, 0x0a, 0x0b, 0x4a, 0x43, 0x4a, 0x4d, 0x4a, 0x44, 0x4b,
	0x41, 0x4c, 0x41, 0x4a, 0x18, 0x94, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4a, 0x43, 0x4a,
	0x4d, 0x4a, 0x44, 0x4b, 0x41, 0x4c, 0x41, 0x4a, 0x12, 0x21, 0x0a, 0x0b, 0x4b, 0x50, 0x46, 0x43,
	0x41, 0x46, 0x4a, 0x50, 0x48, 0x4d, 0x46, 0x18, 0xbb, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4b, 0x50, 0x46, 0x43, 0x41, 0x46, 0x4a, 0x50, 0x48, 0x4d, 0x46, 0x12, 0x21, 0x0a, 0x0b, 0x42,
	0x44, 0x47, 0x4c, 0x4e, 0x42, 0x4f, 0x42, 0x4d, 0x49, 0x45, 0x18, 0xfa, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x42, 0x44, 0x47, 0x4c, 0x4e, 0x42, 0x4f, 0x42, 0x4d, 0x49, 0x45, 0x12, 0x21,
	0x0a, 0x0b, 0x49, 0x4b, 0x4e, 0x42, 0x4a, 0x4f, 0x46, 0x4c, 0x43, 0x41, 0x45, 0x18, 0x83, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x4b, 0x4e, 0x42, 0x4a, 0x4f, 0x46, 0x4c, 0x43, 0x41,
	0x45, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x75, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x75, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0b, 0x4e, 0x44,
	0x42, 0x4f, 0x46, 0x43, 0x4d, 0x48, 0x4c, 0x4e, 0x50, 0x18, 0xb6, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4e, 0x44, 0x42, 0x4f, 0x46, 0x43, 0x4d, 0x48, 0x4c, 0x4e, 0x50, 0x12, 0x27, 0x0a,
	0x0f, 0x6d, 0x64, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0xc3, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x64, 0x6b, 0x52, 0x65, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0b, 0x4c, 0x43, 0x4e, 0x4d, 0x43, 0x4c,
	0x41, 0x46, 0x48, 0x50, 0x42, 0x18, 0xcb, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x43,
	0x4e, 0x4d, 0x43, 0x4c, 0x41, 0x46, 0x48, 0x50, 0x42, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x21, 0x0a, 0x0b, 0x4f, 0x4d, 0x50,
	0x4d, 0x47, 0x4f, 0x45, 0x46, 0x42, 0x4d, 0x43, 0x18, 0xa3, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x4d, 0x50, 0x4d, 0x47, 0x4f, 0x45, 0x46, 0x42, 0x4d, 0x43, 0x12, 0x21, 0x0a, 0x0b,
	0x4a, 0x4d, 0x4a, 0x46, 0x44, 0x42, 0x45, 0x48, 0x44, 0x4b, 0x47, 0x18, 0xc5, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4a, 0x4d, 0x4a, 0x46, 0x44, 0x42, 0x45, 0x48, 0x44, 0x4b, 0x47, 0x12,
	0x20, 0x0a, 0x0b, 0x4d, 0x4f, 0x47, 0x43, 0x47, 0x42, 0x47, 0x48, 0x41, 0x49, 0x4f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4d, 0x4f, 0x47, 0x43, 0x47, 0x42, 0x47, 0x48, 0x41, 0x49,
	0x4f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x49, 0x44, 0x50, 0x47, 0x41, 0x45, 0x4a, 0x44, 0x50, 0x50,
	0x44, 0x18, 0x96, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x44, 0x50, 0x47, 0x41, 0x45,
	0x4a, 0x44, 0x50, 0x50, 0x44, 0x12, 0x21, 0x0a, 0x0b, 0x47, 0x4d, 0x41, 0x45, 0x50, 0x4f, 0x50,
	0x50, 0x43, 0x45, 0x48, 0x18, 0xb2, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x4d, 0x41,
	0x45, 0x50, 0x4f, 0x50, 0x50, 0x43, 0x45, 0x48, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x31, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x62, 0x31, 0x12, 0x0f, 0x0a, 0x02, 0x62, 0x36, 0x18, 0xcb,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x62, 0x36, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x48, 0x4e, 0x47, 0x48, 0x42, 0x41, 0x4e, 0x42, 0x4d,
	0x48, 0x46, 0x18, 0xcb, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x48, 0x4e, 0x47, 0x48, 0x42,
	0x41, 0x4e, 0x42, 0x4d, 0x48, 0x46, 0x12, 0x21, 0x0a, 0x0b, 0x41, 0x49, 0x4f, 0x44, 0x41, 0x4a,
	0x46, 0x41, 0x47, 0x50, 0x41, 0x18, 0x8e, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x49,
	0x4f, 0x44, 0x41, 0x4a, 0x46, 0x41, 0x47, 0x50, 0x41, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0xe6,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x4b, 0x4a, 0x41, 0x4d, 0x49, 0x43,
	0x42, 0x4d, 0x44, 0x4a, 0x44, 0x18, 0x58, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4b, 0x4a, 0x41,
	0x4d, 0x49, 0x43, 0x42, 0x4d, 0x44, 0x4a, 0x44, 0x42, 0x28, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44,
	0x61, 0x6e, 0x68, 0x65, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_GateServer_proto_rawDescOnce sync.Once
	file_GateServer_proto_rawDescData = file_GateServer_proto_rawDesc
)

func file_GateServer_proto_rawDescGZIP() []byte {
	file_GateServer_proto_rawDescOnce.Do(func() {
		file_GateServer_proto_rawDescData = protoimpl.X.CompressGZIP(file_GateServer_proto_rawDescData)
	})
	return file_GateServer_proto_rawDescData
}

var file_GateServer_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_GateServer_proto_goTypes = []interface{}{
	(*GateServer)(nil), // 0: GateServer
}
var file_GateServer_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_GateServer_proto_init() }
func file_GateServer_proto_init() {
	if File_GateServer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GateServer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GateServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GateServer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GateServer_proto_goTypes,
		DependencyIndexes: file_GateServer_proto_depIdxs,
		MessageInfos:      file_GateServer_proto_msgTypes,
	}.Build()
	File_GateServer_proto = out.File
	file_GateServer_proto_rawDesc = nil
	file_GateServer_proto_goTypes = nil
	file_GateServer_proto_depIdxs = nil
}
